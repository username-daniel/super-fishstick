To make supervisord start automatically when the system boots up and gracefully shut down when the system is shut down, you can create a systemd unit file. Here are the steps to do this:

    Create a new file named supervisord.service in the /etc/systemd/system directory using the following command:

    bash

sudo nano /etc/systemd/system/supervisord.service

Add the following content to the supervisord.service file:

makefile

[Unit]
Description=Supervisor process control system
After=network.target

[Service]
User=<your_username>
Group=<your_group>
ExecStart=/usr/local/bin/supervisord -n -c /etc/supervisor/supervisord.conf
ExecStop=/usr/local/bin/supervisorctl shutdown
Restart=on-failure
KillMode=process
KillSignal=SIGTERM
TimeoutStopSec=60

[Install]
WantedBy=multi-user.target

Replace <your_username> and <your_group> with the appropriate values for your system. The ExecStart line specifies the command to start supervisord with the -n option to run it in the foreground and the -c option to specify the location of the configuration file.

Save and close the supervisord.service file.

Reload the systemd daemon to recognize the new unit file:

sudo systemctl daemon-reload

Enable the supervisord service to start at boot:

bash

sudo systemctl enable supervisord

Start the supervisord service:

sql

    sudo systemctl start supervisord

Now, supervisord will start automatically when the system boots up and gracefully shut down when the system is shut down.

To add another app to supervisord, you can modify the supervisord.conf file. Here's an example configuration for a new program named myapp:

javascript

[program:myapp]
command=/path/to/myapp.py
directory=/path/to/myapp/
autostart=true
autorestart=true
stderr_logfile=/var/log/myapp.err.log
stdout_logfile=/var/log/myapp.out.log

Replace /path/to/myapp.py and /path/to/myapp/ with the appropriate values for your system. The autostart and autorestart options will ensure that myapp starts automatically and is automatically restarted if it crashes or is terminated. The stderr_logfile and stdout_logfile options will log error and output messages to separate log files.

Save and close the supervisord.conf file, then reload the supervisord configuration using the following command:

sudo supervisorctl reread

This will read the updated configuration and start the myapp program if it's not already running. You can also use the sudo supervisorctl status command to check the status of all the programs managed by supervisord.

